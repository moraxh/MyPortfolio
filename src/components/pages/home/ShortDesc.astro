---
  import Icon from "../../common/Icon.astro";
  import StatsCard from "../../common/StatsCard.astro"
  import GithubStats from "./GithubStats.astro";
  import { WORKING_SINCE, LOOKING_FOR_JOB } from "astro:env/server";
  import { getCollection } from 'astro:content'

  // Get current years 
  const startDate = new Date((WORKING_SINCE || '').replace(/-/g, "/"));
  const now = new Date();
  const diffTime = Math.abs(startDate.getTime() - now.getTime());
  const diffYears = diffTime / (1000 * 3600 * 24 * 365);
  const hasDecimal = diffYears % 1 !== 0;
  const yearsOfExperience = `${hasDecimal ? '+' : ''}${Math.floor(diffYears)}`;

  const projects = await getCollection('projects')
  const professionalProjects = projects.filter(p => p.data.isProfessional)
---

<div class="animation-fade-in-up animation-delay-1 flex flex-col justify-center items-center gap-4">
  <div class="infoCards flex flex-wrap justify-center items-center gap-4">
    {WORKING_SINCE && (
      <StatsCard class="!justify-between bg-secondary" primary={yearsOfExperience} secondary="YEARS OF EXPERIENCE" />
    )}
  
    {professionalProjects.length > 0 && (
      <StatsCard class="!justify-between bg-accent" primary={professionalProjects.length} secondary="PROFESSIONAL PROJECTS" />
    )}

    <GithubStats server:defer>
      <StatsCard slot="fallback" class="!justify-between bg-primary text-bg">
        <span class="text-7xl">
          <Icon name='spinner' class='w-16 h-16 fill-black animate-spin' />
        </span>
        <p class="text-lg leading-5">GITHUB REPOSITORIES</p>
      </StatsCard>
    </GithubStats>
  </div>

  <div data-glow style="--radius: 20000" class="border-[0.5px] border-white/10 flex justify-center items-center gap-2 bg-bg-secondary w-fit py-2 font-semibold px-5 rounded-full">
    <div data-glow></div>

    {LOOKING_FOR_JOB ? (
      <>
        <span class="status-dot status-success"></span>
        Open to opportunities
      </>
    ) : (
      <>
        <span class="status-dot status-danger"></span>
        Not currently available
      </>
    )}
  </div>
</div>

<style>
  @reference "../../../styles/global.css";

  .status-dot {
    display: block;
    width: 10px;
    height: 10px;
    border-radius: 50%;
    animation: pulse 2.5s infinite;
    animation-timing-function: ease-in-out;
    animation-delay: .5s;
  }

  @keyframes pulse {
    0% { opacity: 1; }
    40% { opacity: 0; }
    80% { opacity: 1; }
    100% { opacity: 1; } 
  }

  .status-success {
    @apply filter-success-drop-shadow bg-success;
  }

  .status-danger {
    @apply filter-danger-drop-shadow bg-danger;
  }
</style>